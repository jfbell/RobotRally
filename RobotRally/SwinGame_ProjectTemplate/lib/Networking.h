/*
* Generated by SGWrapperGen - DO NOT EDIT!
*
* SwinGame wrapper for C - Networking
*
* Wrapping sgNetworking.pas
*/

#ifndef sgNetworking
#define sgNetworking

#include <stdint.h>

#ifndef __cplusplus
  #include <stdbool.h>
#endif

#include "Types.h"

int32_t accept_tcpconnection();
void broadcast_tcpmessage(const char *aMsg);
void broadcast_udpmessage(const char *aMsg);
void clear_message_queue(connection aConnection);
void close_all_connections();
void close_all_sockets();
void close_all_tcphost_sockets();
void close_all_udpsockets();
bool close_connection(connection *aConnection);
bool close_tcphost_socket(int32_t aPort);
bool close_udpsocket(int32_t aPort);
int32_t connection_count();
uint32_t connection_ip(connection aConnection);
int32_t connection_port(connection aConnection);
int32_t connection_queue_size();
connection create_tcpconnection_to_host(const char *aIP, int32_t aPort);
bool create_tcphost(int32_t aPort);
connection create_udpconnection(const char *aDestIP, int32_t aDestPort, int32_t aInPort);
int32_t create_udphost(int32_t aPort);
void dec_to_hex(uint32_t aDec, char *result);
void enqueue_message(const char *aMsg, connection aConnection);
void enqueue_new_connection(connection aConnection);
connection fetch_connection();
void free_connection(connection *aConnection);
void hex_str_to_ipv4(const char *aHex, char *result);
void hex_to_dec_string(const char *aHex, char *result);
uint32_t ipv4_to_dec(const char *aIP);
int32_t message_count(connection aConnection);
void my_ip(char *result);
void read_last_message(connection aConnection, char *result);
void read_message(connection aConnection, char *result);
void release_all_connections();
connection retreive_connection(int32_t aConnectionAt);
connection send_tcpmessage(const char *aMsg, connection aConnection);
bool send_udpmessage(const char *aMsg, connection aConnection);
bool tcpmessage_received();
bool udpmessage_received();

#ifdef __cplusplus
// C++ overloaded functions
bool close_connection(connection &aConnection);
connection create_tcpconnection(const char *aIP, int32_t aPort);
void free_connection(connection &aConnection);

#endif

#endif

